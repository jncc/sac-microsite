pipeline {
    agent { label ' dotnet ' }
    stages {
        stage('Checkout current data and code bundle and build') {
            steps {
                checkout([$class: 'GitSCM', 
                    branches: [[name: '*/master']], 
                    doGenerateSubmoduleConfigurations: false, 
                    extensions: [[$class: 'RelativeTargetDirectory', 
                                    relativeTargetDir: 'master']], 
                    submoduleCfg: [], 
                    userRemoteConfigs: [[url: 'https://github.com/jncc/sac-microsite.git']]])
                dir('./master') {
                    sh 'dotnet restore'
                    sh 'dotnet build'
                    sh 'dotnet run -- -g -s $AWS_ELASTICSEARCH_INDEX -a $GOOGLE_ANALYTICS_ID -t $GOOGLE_TAG_MANAGER_ID'
                }
            }
        }
        stage('Checkout deployment branch and push updates to it') {
            steps {
                dir('./gh-pages')  {
                    deleteDir()
                    withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: env.GIT_CREDENTIALS_ID,
                        usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD']]) {
                        sh 'git clone https://github.com/jncc/sac-microsite.git . --branch=gh-pages --depth 1'
                        sh 'git config --local credential.helper "!p() { echo username=\\$GIT_USERNAME; echo password=\\$GIT_PASSWORD; }; p"'
                        sh 'rm -r ./site/*'
                        sh 'rm -r ./species/*'
                        sh 'rm -r ./habitat/*'
                        sh 'rm -r ./images/*'
                        sh 'rm -r ./frontend/*'
                        sh 'cp -r ../master/output/html/* .'
                        sh 'cp -r ../master/docs/images/* ./images/'
                        sh 'cp -r ../master/docs/frontend/* ./frontend/'
                        sh 'git add --all'
                        sh 'git commit -a -m "Jenkins Build ' + env.BUILD_NUMBER + '" --author "Jenkins <jenkins@jncc.gov.uk>" || echo \'Commit failed. There is probably nothing to commit.\''
                        sh 'git push --force || echo \'Push failed. There is probably nothing to commit.\''
                    }
                }
            }
        }
        stage('Clear and reindex elasticsearch documents') {
            steps {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: env.AWS_CREDENTIALS_ID,
                            accessKeyVariable: 'AWS_ACCESS_KEY_ID', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {
                    build job: 'elasticsearch-delete-by-site', parameters: [string(name: 'site', value: 'sac'), string(name: 'index', value: 'beta')]
                    sh 'chmod +x ./master/deployment/search-documents/venv-install-and-run.sh'
                    sh './master/deployment/search-documents/venv-install-and-run.sh'
                }
            }
        }
    }
}